//** Application mixins

@use "sass:math";

@import './_variables.scss';

$_text-default-font-size: 14px;
$text-default-line-height: math.div(18px, $_text-default-font-size);

@mixin clickable {
	cursor: pointer;
	user-select: none;
	outline: none;
}

@mixin link-text {
	@include clickable;
	color: $upscale-primary;
}

@mixin page-header {
	display: flex;
	justify-content: space-between;

	position: absolute;
	top: $navbar-height;

	width: 100%;
	min-width: $min-app-width;

	background-color: $upscale-bg2;
	height: $page-header-height;
	z-index: 5;
}

@mixin tab-header {
	@include page-header;

	align-items: flex-end;
	border-bottom: 1px solid $upscale-grey2;

	.mat-tab-link {
		opacity: 1;
		color: $sapField_PlaceholderTextColor;
		font-family: $default-font;
		height: 100%;
	}

	::ng-deep .mat-ink-bar {
		bottom: -1px;
	}
	::ng-deep .mat-tab-nav-bar {
		height: 100%;
	}
	::ng-deep .mat-tab-links {
		height: 100%;
	}
}

@mixin general-header {
	@include page-header;
	align-items: center;
	border-bottom: 1px solid $upscale-grey7;
}

@mixin upscale-footer {
	position: absolute;
	right: 0;
	bottom: 0;
	min-width: 776px;
	box-sizing: border-box;
	background-color: $upscale-bg4;
	padding: 1.72em 1.72em;
}

/**
 * used when the left nav is present
*/
@mixin footer-width-left-padding {
	::ng-deep {
		.footer {
			left: 247px;
			width: calc(100% - 247px);
		}
	}
}

@mixin validation-error-message {
	width: 100%;
	background-color: $error;
	box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);
	p {
		@include text-default;
		padding: 8px 12px;
		color: $white;
		margin-bottom: 16px;
	}
}

@mixin paragraph-card {
	font-size: 1.55rem;
	line-height: 1.8em;
	text-align: center;
	background-color: #fff;
	color: $upscale-grey4;
	padding: 1.75em;
	min-width: 500px;

	button {
		display: block;
		margin: 1.75em auto 0 auto;
	}
}

@mixin custom-disabled-toggle {
	.mat-slide-toggle:disabled {
		.mat-slide-toggle-bar {
			background-color: #b681cb;
		}
		.mat-slide-toggle-thumb-container {
			background-color: #dac0e5;
		}
	}
}

/**
 * Firefox flex and overflow fix https://bugzilla.mozilla.org/show_bug.cgi?id=1043520
 */
@mixin firefox-overflow-flex-parent {
	min-height: 0;
}

@mixin ellipsis-truncate() {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

/**
*NOTE: 	1) $bgColor param should always match the background color.
* 			If background varies (i.e. hover) set background:inherit up to parent
*			that has varying background color
		2) $lineHeight should always be in relative em format, i.e. 1.5 or 1.33. Not px.
*/

@mixin multiline-ellipsis-truncate($fontSize: $base-font-size, $lineHeight: $text-default-line-height, $lineCount: 1, $bgColor: inherit, $paddingBottom: false) {
	max-height: $lineHeight * $fontSize * $lineCount;
	box-sizing: border-box;
	overflow: hidden;
	position: relative;
	text-align: left;
	font-size: $fontSize;
	line-height: $lineHeight;
	padding-right: 0.75em;
}

@mixin upscale__dropdown {
	::ng-deep {
		.mat-form-field-underline,
		.mat-form-field-subscript-wrapper {
			display: none;
		}
		.mat-form-field-wrapper {
			padding: 0;
		}
		.mat-select-arrow {
			margin: 0;
			position: relative;
			top: -7px;
		}
		.mat-select-arrow::before {
			position: relative;
			top: -6px;
			right: 8px;
		}
		.mat-form-field-infix {
			padding: 0;
			width: unset;
		}
		.mat-form-field-label,
		.mat-select-arrow,
		.mat-select-value-text {
			color: $muted-text;
		}
	}
}

/** Used specifically for md-select components */
@mixin upscale__select($min-width: 161px, $max-width: 161px) {
	background-color: white;
	border: 1px solid $sapField_BorderColor;
	box-sizing: border-box;
	color: #4a4a4a;
	max-width: $max-width;
	min-height: 32px;
	min-width: $min-width;
	padding-left: 13px;
	padding-right: 5px;
	height: 36px;

	&.mat-select-disabled {
		background-color: $upscale-grey9;
	}

	/**
	 * Maybe not the best way to implement this, but intended to be used as a way to render the select as a read-only field.
	 */
	&.read-only {
		background-color: transparent;
		border: none;
		height: auto;
		min-height: auto;
		padding: 0;

		::ng-deep {
			.mat-select-arrow-wrapper {
				display: none;
			}

			.mat-select-trigger {
				width: 100%;
			}

			.mat-select-value {
				padding: 0 !important;
			}
		}
	}

	::ng-deep .mat-select-arrow {
		border-top-color: black;
		margin: 0;
		position: relative;

		&:after {
			position: absolute;
			content: '';
			display: block;
			height: 24px;
			// margin + border left of icon + added distance from left
			left: -12px;
			// half the height of the line + half the height of the icon
			top: -14.5px;
			width: 1px;
			opacity: 0.28;
			background: $upscale-grey6;
		}

		&:before {
			position: relative;
			top: -8px;
			right: 0px;
		}
	}

	&:focus {
		border-color: $upscale-primary;
	}

	::ng-deep .mat-select-trigger {
		height: 100%;
		padding: 10px;
	}

	::ng-deep .mat-select-value {
		vertical-align: middle;
	}

	::ng-deep .mat-select-value-text {
		padding-right: 1em;
	}

	::ng-deep .mat-select-placeholder,
	::ng-deep .mat-select-value-text {
		color: #4a4a4a;
		font-size: 1rem;
	}
	::ng-deep .mat-select-underline {
		display: none;
	}
}

/**
 * Alternate appearance for mat-select.
 * Apply directly on the mat-select tag itself. Remember to put this in the :host selector.
 * For reference as to what this looks like, see flag-selector.component.ts.
 */
@mixin upscale-select-2($min-width: 161px, $max-width: 161px) {
	::ng-deep {
		@include upscale__select($min-width, $max-width);

		border-radius: 4px;
		padding: 0;
		.mat-select-trigger {
			align-items: center;
			display: inline-flex;
			flex-direction: row;

			.mat-select-arrow-wrapper {
				$rhythm: 8px;

				border-right: 1px solid $upscale-grey7;
				margin-right: $rhythm;
				order: 1;
				padding: $rhythm;

				.mat-select-arrow {
					&::after {
						display: none;
					}

					&::before {
						position: absolute;
						top: -6px;
						right: -5px;
					}
				}
			}
			.mat-select-value {
				max-width: none;
				order: 2;
			}
		}
	}
}

/**
 * Used specifically for dropdowns that select the context for another input ex. ContentLink or Language.
 */
@mixin upscale-field-selector {
	::ng-deep & {
		background-color: $upscale-bg1;
		border-right: 1px solid $upscale-grey7;
		box-sizing: border-box;

		&:focus {
			border: 1px solid $sapLink_Hover_Color;
		}

		mat-option {
			@include text-small;
			color: $upscale-grey4;
			height: 1.25em;
			padding: 0.5em 1em;
		}

		.mat-select-arrow {
			@include text-small;
			font-size: 16px;
			color: $sapContent_IconColor;
			margin: 0;
			margin-right: 0.5em;
		}
		.mat-select-arrow::before {
			position: absolute;
			top: 10px;
			right: 5px;
		}
		.mat-select-trigger {
			height: 100%;
		}
		.mat-select-value {
			vertical-align: middle;
		}
		.mat-select-underline {
			visibility: hidden;
		}
		.mat-select-value-text {
			@include text-default;
			color: $upscale-grey2;
			padding-left: 8px;
		}
	}
}

/** Used specifically for ng-selectize components */
@mixin upscale__selectize {
	::ng-deep .selectize-dropdown-header {
		background-color: $white;
		border-bottom: 1px solid $upscale-grey7;
		border-top: 1px solid $upscale-grey7;
		box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);
		text-align: center;

		.selectize-dropdown-header-label {
			@include text-small;
			font-style: italic;
			white-space: pre-line;
		}

		.selectize-dropdown-header-close {
			display: none;
		}
	}
	::ng-deep .selectize-input {
		padding-left: 0.8571rem;
		box-shadow: none;
		border-radius: 0px;
		border: solid 1px $sapField_BorderColor;
		font-family: $default-font;
		transition: 0.2s border;
		input {
			font-size: 14px;
			color: $muted-text;
			&::placeholder {
				color: $sapField_PlaceholderTextColor;
			}
		}
		&::after {
			display: none !important;
		}
		&:hover {
			border: solid 1px $sapField_BorderColor;
		}
		&.focus {
			border-color: $upscale-primary;
		}
		&.disabled {
			padding: 0 !important;
			border: none;
			box-shadow: none;
			background: none;
			opacity: 1;
			border-radius: 0;

			.item {
				margin: 0 5px 5px 0 !important;
				padding-right: 5px !important;
				padding-left: 5px !important;
				border: 1px solid #e0e0e0 !important;
				border-radius: 3px !important;
				color: #303030 !important;
				background: #f5f5f5 !important;
				.remove {
					display: none !important;
				}
			}
		}
	}
}

/** Used specifically for owl-date-time-inline components */
@mixin upscale-date-time {
	::ng-deep {
		owl-date-time-calendar {
			border-bottom: none;
		}
		owl-date-time-container {
			box-shadow: none;
		}
		.owl-dt-calendar-cell-content {
			@include text-default;
		}
		.owl-dt-calendar-cell-selected {
			background-color: $upscale-primary;
		}
		.owl-dt-timer-hour12-box {
			color: $upscale-primary;
			&:hover .owl-dt-control-button-content {
				background-color: $upscale-primary;
			}
		}
	}
}

/**
 * Styling for grids in the ListingComponent.
 * NOTE: This is a temporary measure before we standardize a generic Grid Component.
 * This will be removed in the future when sufficient work can be placed on a generic component
 */
@mixin listing-grid-component {
	@include upscale__selectize;

	background-color: white;
	border: solid 1px $upscale-grey8;
	box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);
	display: flex;
	flex-direction: column;

	&:hover {
		.selectize::ng-deep .selectize-input {
			border-color: $upscale-grey7;
		}
	}

	.content {
		padding: 1em;

		&__row {
			align-items: center;
			display: flex;
			flex-direction: row;
			justify-content: space-between;
			margin: 0.5em 0;
		}

		&__title {
			@include clickable;
			@include text-default;
			color: $upscale-primary;
			display: inline-block;
			height: 18px;
		}
	}

	.image {
		$image-height: 162px;
		height: $image-height;
		max-height: $image-height;
		position: relative;
		z-index: 1;
	}

	.select-toggle {
		left: 0.5em;
		position: absolute;
		top: 0.5em;
		z-index: 1;
	}

	.selectize {
		::ng-deep .item {
			@include text-small;
			background: $upscale-grey9;
			border-color: $upscale-grey8;
			border-radius: 2px;
			color: $upscale-grey2;
		}

		::ng-deep .selectize-input {
			border-color: transparent;
			margin-top: 0.5em;
			&:after {
				display: none !important;
			}
			&.focus {
				border-color: $upscale-grey7;
			}
		}
	}
}

/**
 * NOTE: This is only a temporary solution for the Config table headers.
 * Ideally we use the SortableColumnsComponent for these headers, but many layouts in
 * Config depend on a <table> structure, and the amount of work to refactor each and every instance
 * exceeds the value of the work at the moment.
 * NOTE: Please get rid of this mixin when no longer in use.
 * Stick this on the same level you declare rules for your <table> element.
 */
@mixin upscale-table-header {
	thead {
		box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.15);

		th {
			box-sizing: border-box;
			color: $upscale-grey2 !important;
			line-height: 1.29;
			font-weight: normal !important;
			font-size: 1rem !important;
			height: 34px;
			padding-bottom: 8px !important;
			padding-top: 8px !important;
		}
	}
}

/***************************
* Fonts
* font-size and line-height
***************************/

$_title-h1-font-size: 44px;
$title-h1-line-height: math.div(56px, $_title-h1-font-size);
@mixin title-h1 {
	line-height: $title-h1-line-height;
	font-size: #{math.div($_title-h1-font-size, $base-font-size)}rem;
}

$_title-h2-font-size: 34px;
$title-h2-line-height: math.div(44px, $_title-h2-font-size);
@mixin title-h2 {
	line-height: $title-h2-line-height;
	font-size: #{math.div($_title-h2-font-size, $base-font-size)}rem;
}

$_title-h3-font-size: 28px;
$title-h3-line-height: math.div(36px, $_title-h3-font-size);
@mixin title-h3 {
	line-height: $title-h3-line-height;
	font-size: #{math.div($_title-h3-font-size, $base-font-size)}rem;
}

$_title-h4-font-size: 22px;
$title-h4-line-height: math.div(28px, $_title-h4-font-size);
@mixin title-h4 {
	line-height: $title-h4-line-height;
	font-size: #{math.div($_title-h4-font-size, $base-font-size)}rem;
}

$_title-h5-font-size: 18px;
$title-h5-line-height: math.div(22px, $_title-h5-font-size);
@mixin title-h5 {
	line-height: $title-h5-line-height;
	font-size: #{math.div($_title-h5-font-size, $base-font-size)}rem;
}

$_title-h6-font-size: 16px;
$title-h6-line-height: math.div(20px, $_title-h6-font-size);
@mixin title-h6 {
	line-height: $title-h6-line-height;
	font-size: #{math.div($_title-h6-font-size, $base-font-size)}rem;
}

@mixin text-default {
	line-height: $text-default-line-height;
	font-size: #{math.div($_text-default-font-size, $base-font-size)}rem;
}

$_text-small-font-size: 12px;
$text-small-line-height: math.div(16px, $_text-small-font-size);
@mixin text-small {
	line-height: $text-small-line-height;
	font-size: #{math.div($_text-small-font-size, $base-font-size)}rem;
}

@function em($pixels, $base-font-size: 14) {
	@return #{math.div($pixels, $base-font-size)}em;
}

@function rem($pixels, $base-font-size: 14) {
	@return #{math.div($pixels, $base-font-size)}rem;
}

/***************************
* Mixin to implement a dotted border where the spacing between dots is adjustable.
***************************/
@mixin dottedBorder($color: #8f8f8f, $orientation: horizontal, $position: top) {
	background-position: $position;
	@if $orientation == horizontal {
		background-image: linear-gradient(to right, $color (math.div(2, 3) * 100%), rgba(255, 255, 255, 0) 0%);
		background-size: 7px 1.5px;
		background-repeat: repeat-x;
	} @else {
		background-image: linear-gradient($color (math.div(2, 3) * 100%), rgba(255, 255, 255, 0) 0%);
		background-size: 1.5px 7px;
		background-repeat: repeat-y;
	}
	.ie9 & {
		border-#{$position}: 1px dotted $color;
	}
}

@mixin color-product {
	border: solid 1px $sapAccentColor9;
	background-color: $sapAccentColor9;
}

@mixin color-category {
	border: solid 1px $sapAccentColor6;
	background-color: $sapAccentColor6;
}

@mixin color-article {
	border: solid 1px $sapAccentColor8;
	background-color: $sapAccentColor8;
}

@mixin color-none {
	border: solid 1px $sapAccentColor10;
	background-color: $sapAccentColor10;
}

@mixin color-template-id {
	border: solid 1px $sapAccentColor4;
	background-color: $sapAccentColor4;
}

@mixin color-template-alias {
	border: solid 1px $sapAccentColor1;
	background-color: $sapAccentColor1;
}

@mixin color-source {
	border: solid 1px $sapAccentColor7;
	background-color: $sapAccentColor7;
}

@mixin color-custom-html {
	border: solid 1px #ffebe6;
	background-color: #ffebe6;
	color: #5c1200;
}

@mixin icon-blue--m {
	$medium-size-icon: 16px;
	font-size: $medium-size-icon;
	height: $medium-size-icon;
	width: $medium-size-icon;
	color: $sapContent_IconColor;
}

@mixin icon--m {
	$medium-size-icon: 16px;
	font-size: $medium-size-icon;
	height: $medium-size-icon;
	width: $medium-size-icon;
}
